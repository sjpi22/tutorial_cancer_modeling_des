################################################################################
# Sherlock command line steps
################################################################################
# Comments are noted with # symbol
# Interactive steps are noted with []

[Open Terminal]
# Change sjpi to your own SUNet ID below
% ssh sjpi@login.sherlock.stanford.edu
[Input password]
[Duo two-factor login]

# After successful login, start interactive shell session to load R packages
# More info about interactive shells here: https://www.sherlock.stanford.edu/docs/user-guide/running-jobs/?h=sh_dev#compute-nodes
$ sh_dev
$ ml R/4.3.2
$ R

# Install R packages (use library <package> to check if package does not exist)
# See here for more info: https://www.sherlock.stanford.edu/docs/software/using/R/
> install.packages('readxl')
[Warning - Answer y twice to create a directory for future R packages]
[Selected 1 for CRAN mirror]
> install.packages('data.table')
> install.packages('tidyverse')
> install.packages('lhs')
> install.packages('doParallel')
> install.packages('foreach')
> install.packages('asserthis')
> install.packages('bestNormalize')
> install.packages('MASS')
> install.packages('truncnorm')
> install.packages('imabc')
# You can manually check at the end if each library is installed by calling library(<package>)

# You can also update R packages using > update.packages() which updates everything or > update.packages('<package name>')

# Note: You can set the number of cores to speed up installation time
$ sh_dev -c 4
# and install in R using syntax like
> install.packages("dplyr", repos = "http://cran.us.r-project.org", Ncpus=4)

# To install tensorflow, I tried calling the following in an R session with keras already installed (source: https://tensorflow.rstudio.com/install/) but it didn't work with the error:
# ERROR: Could not find a version that satisfies the requirement tensorflow==2.15.* (from versions: 0.12.1, 1.0.0, 1.0.1, 1.1.0, 1.2.0, 1.2.1, 1.3.0, 1.4.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.7.0, 1.7.1, 1.8.0, 1.9.0, 1.10.0, 1.10.1, 1.11.0, 1.12.0, 1.12.2, 1.12.3, 1.13.1, 1.13.2, 1.14.0, 1.15.0, 1.15.2, 1.15.3, 1.15.4, 1.15.5, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.4.0, 2.4.1, 2.4.2, 2.4.3, 2.4.4, 2.5.0, 2.5.1, 2.5.2, 2.6.0rc0, 2.6.0rc1, 2.6.0rc2, 2.6.0, 2.6.1, 2.6.2)
# ERROR: No matching distribution found for tensorflow==2.15.*
> install.packages('eras
> library(keras)
> install_keras()
> library(tensorflow) # Confirm if installation succeeded)

# Instead I tried:
> install.packages("remotes")
> remotes::install_github("rstudio/tensorflow")
> reticulate::install_python()
> library(tensorflow)
> install_tensorflow(envname = "r-tensorflow")

# When done installing R packages, type q() to return to command window
> q()
[Hit n to not save workspace image]

# It turns out, I got an error message when installing tidyverse that mentioned adding the directory containing fribidi.pc, so I added the fribidi module before launching the R session
$ ml R/4.3.2 fribidi
$ R
> install.packages('tidyverse')
> q()

[Open separate terminal window to transfer files from home directory to Sherlock - this can be done at any point before the next step]
# Transfer files from local to Sherlock, changing sjpi to your own SUNet ID below
# May need / at the end of the directory to copy the parent folder?
$ scp -r ~/tutorial_cancer_modeling_des sjpi@login.sherlock.stanford.edu:
[Input password and two-factor authenticate]

# Examples for updating specific files
$ scp ~/tutorial_cancer_modeling_des/sherlock/generate_BayCANN_sample.sbatch sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/sherlock/
$ scp ~/tutorial_cancer_modeling_des/analysis/generate_BayCANN_sample.R sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/analysis/
$ scp ~/tutorial_cancer_modeling_des/analysis/run_IMABC.R sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/analysis/
$ scp ~/tutorial_cancer_modeling_des/sherlock/run_IMABC.sbatch sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/sherlock/


[Go back to original terminal]
# Navigate to directory
$ cd tutorial_cancer_modeling_des

# Run batch script, making sure all file paths in referenced files are from the directory that you execute from; Error and output logs will be in the directory you launch your job in
$ sbatch sherlock/generate_BayCANN_sample.sbatch
$ sbatch sherlock/run_IMABC.sbatch

# Move outputs and logs from Sherlock to local
$ scp sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/generate_BayCANN_sample.log ~/tutorial_cancer_modeling_des/sherlock
$ scp sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/data/calibration_sample.RData ~/tutorial_cancer_modeling_des/sherlock
# For generate_BayCANN_sample.log, I got the following error and we had 8750 instead of 10k simulations: "error: Detected 1 oom_kill event in StepId=48813921.batch. Some of the step tasks have been OOM Killed." This could be because the memory of 10G that I set was not enough for one core (source: https://stackoverflow.com/questions/68041107/mclapply-warnings-scheduled-cores-did-not-deliver-results-all-values-of-th)
$ scp sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/output/IMABC_calibration_debug.RData ~/tutorial_cancer_modeling_des/output
$ scp sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/run_IMABC.log ~/tutorial_cancer_modeling_des/sherlock
$ rsync -a sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/sherlock/output/imabc/ ~/tutorial_cancer_modeling_des/sherlock/output/imabc/



# Other helpful commands
# See your jobs in the queue
squeue -u $USER
# Cancel job (job ID can be found by running squeue -u $USER)
scancel <job id>
# See modification date of file
stat <filename>
# Delete file (add -r in front of filename if recursive directory delete)
rm <filename>
# See contents in current directory
$ ls
# Read file contents (helpful for reading logs and making sure if changes were updated in a file)
more <filename>
# Transfer only files that have changed
$ rsync -a ~/tutorial_cancer_modeling_des/analysis/ sjpi@login.sherlock.stanford.edu:tutorial_cancer_modeling_des/analysis/


#### Installing dev tools (source: https://www.sherlock.stanford.edu/docs/software/using/R/?h=foreach#installing-devtools)
# Launch interactive dev session with 4 CPUs

$ sh_dev -c 4

# Load the required modules

$ ml purge
$ ml R/4.2.0
$ ml system harfbuzz fribidi
$ ml cmake libgit2
$ ml openssl

# Launch R and install devtools

$ R
> install.packages("devtools", repos = "http://cran.us.r-project.org", Ncpus=4)

